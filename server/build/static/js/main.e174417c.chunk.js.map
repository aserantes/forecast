{"version":3,"sources":["helpers/format.js","helpers/tempConverter.js","redux/ui.js","helpers/localState.js","API/cities.js","redux/cities.js","API/forecast.js","redux/forecast.js","redux/index.js","components/Input.js","components/WeatherData.js","components/Forecast.js","components/ForecastResults.js","components/City.js","components/CityList.js","components/InputResults.js","components/DarkModeToggler.js","components/CelciusToggler.js","components/MainMenu.js","components/App.js","index.js"],"names":["dateOptions","year","month","day","hour","minute","hour12","timeOptions","getLocalDateTime","timeZone","lclNow","Date","utcNow","getTime","getTimezoneOffset","newNow","Intl","DateTimeFormat","format","dateTime","k2c","k","Math","round","k2f","initialState","prefersDarkMode","prefersCelcius","previousCities","serializedState","localStorage","getItem","JSON","parse","err","getLocalState","inputValue","uiSlice","createSlice","name","reducers","toggleDarkMode","state","toggleCelcius","setInputValue","action","payload","addPreviousCities","newCity","findIndex","prevCity","id","unshift","length","pop","delPreviousCity","cityIndexToDelete","splice","actions","reducer","axios","create","baseURL","fetchState","response","cityNameToSearch","fetchCities","createAsyncThunk","q","API","get","params","then","res","data","catch","citiesSlice","citiesReset","setCityNameToSearch","extraReducers","fulfilled","pending","cityIdToSearch","fetchForecast","forecastSlice","forecastReset","setCityIdToSearch","store","configureStore","ui","cities","forecast","subscribe","stringify","setItem","Error","setLocalState","getState","Input","dispatch","useDispatch","inputRef","useRef","useSelector","useDebouncedCallback","value","debouncedCallback","TextField","label","variant","fullWidth","onChange","e","target","disabled","autoComplete","InputProps","endAdornment","IconButton","edge","onClick","current","focus","Clear","WeatherData","temp","pressure","humidity","minTemp","temp_min","maxTemp","temp_max","sunrise","sunset","convertedTemp","convertedMinTemp","convertedMaxTemp","Box","display","fontFamily","fontSize","flexGrow","color","flexDirection","fontWeight","useStyles","makeStyles","avatar","backgroundColor","colors","grey","Forecast","props","classes","main","cityName","weather","coord","sys","timezone","country","weatherMain","weatherDesc","description","weatherIcon","icon","lon","lat","mapUrl","Card","CardHeader","Avatar","alt","src","className","title","subheader","Divider","light","CardContent","CardMedia","component","ForecastResults","useEffect","cod","Alert","severity","message","Grid","container","justify","CircularProgress","renderComponent","City","city","onCityClick","minWidth","small","height","width","root","whiteSpace","overflow","textOverflow","maxWidth","ListItem","button","ListItemAvatar","size","ListItemText","disableTypography","Row","index","style","cityItem","key","CityList","itemCount","itemSize","itemData","InputResults","handleCityClick","DarkModeToggler","Switch","checked","CelciusToggler","theme","spacing","dot","margin","list","MainMenu","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Paper","position","Toolbar","disableGutters","aria-label","aria-controls","aria-haspopup","currentTarget","fontStyle","Menu","keepMounted","onClose","List","ListSubheader","dense","map","ListItemSecondaryAction","handleCityDelClick","Delete","App","useMemo","createMuiTheme","palette","type","ThemeProvider","CssBaseline","Container","m","item","xs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e174417c.chunk.js","sourcesContent":["const dateOptions = {\n  year: 'numeric',\n  month: '2-digit',\n  day: '2-digit',\n  hour: 'numeric',\n  minute: '2-digit',\n  hour12: false\n};\n\nconst timeOptions = { hour: 'numeric', minute: '2-digit', hour12: false };\n\nexport const getLocalDateTime = (timeZone) => {\n  const lclNow = new Date();\n  const utcNow = lclNow.getTime() + lclNow.getTimezoneOffset() * 60000;\n  const newNow = new Date(utcNow + timeZone * 1000);\n  return new Intl.DateTimeFormat('UTC', dateOptions).format(newNow);\n};\n\nexport const getTime = (dateTime) => new Intl.DateTimeFormat('default', timeOptions).format(dateTime * 1000);\n","export const k2c = (k) => `${Math.round(k - 273.15)}°C`;\nexport const k2f = (k) => `${Math.round(((k - 273.15) * 9) / 5 + 32)}°F`;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { getLocalState } from '../helpers';\n\nconst initialState = {\n  prefersDarkMode: false,\n  prefersCelcius: true,\n  previousCities: [],\n  ...getLocalState(),\n  inputValue: ''\n};\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleDarkMode: (state) => {\n      state.prefersDarkMode = !state.prefersDarkMode;\n    },\n    toggleCelcius: (state) => {\n      state.prefersCelcius = !state.prefersCelcius;\n    },\n    setInputValue: (state, action) => {\n      state.inputValue = action.payload;\n    },\n    addPreviousCities: (state, action) => {\n      const newCity = action.payload;\n      const cityAlreadyExists = state.previousCities.findIndex((prevCity) => prevCity.id === newCity.id) !== -1;\n      if (!cityAlreadyExists) {\n        state.previousCities.unshift(action.payload);\n        if (state.previousCities.length > 5) state.previousCities.pop();\n      }\n    },\n    delPreviousCity: (state, action) => {\n      const cityIndexToDelete = action.payload;\n      state.previousCities.splice(cityIndexToDelete, 1);\n    }\n  }\n});\n\nconst { actions, reducer } = uiSlice;\n\nexport const { toggleDarkMode, toggleCelcius, setInputValue, addPreviousCities, delPreviousCity } = actions;\n\nexport default reducer;\n","export const getLocalState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (!serializedState) return undefined;\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const setLocalState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    throw new Error(\"can't access localStorage\");\n  }\n};\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: `/cities`,\n});\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport API from '../API/cities';\n\nconst initialState = {\n  fetchState: null,\n  response: null,\n  cityNameToSearch: null\n};\n\nexport const fetchCities = createAsyncThunk('cities/fetchCities', (q) =>\n  API.get('/', { params: { q } })\n    .then((res) => res.data)\n    .catch((err) => err)\n);\n\nconst citiesSlice = createSlice({\n  name: 'cities',\n  initialState,\n  reducers: {\n    citiesReset: () => initialState,\n    setCityNameToSearch: (state, action) => {\n      state.cityNameToSearch = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchCities.fulfilled]: (state, action) => {\n      state.response = action.payload;\n      state.fetchState = 'fulfilled';\n    },\n    [fetchCities.pending]: (state) => {\n      state.fetchState = 'pending';\n    }\n  }\n});\n\nconst { actions, reducer } = citiesSlice;\n\nexport const { citiesReset, setCityNameToSearch } = actions;\n\nexport default reducer;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: `/forecast`,\n});\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport API from '../API/forecast';\n\nconst initialState = {\n  fetchState: null,\n  response: null,\n  cityIdToSearch: null\n};\n\nexport const fetchForecast = createAsyncThunk('forecast/fetchForecast', (id) =>\n  API.get('/', { params: { id } })\n    .then((res) => res.data)\n    .catch((err) => err)\n);\n\nconst forecastSlice = createSlice({\n  name: 'forecast',\n  initialState,\n  reducers: {\n    forecastReset: () => initialState,\n    setCityIdToSearch: (state, action) => {\n      state.cityIdToSearch = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchForecast.fulfilled]: (state, action) => {\n      state.response = action.payload;\n      state.fetchState = 'fulfilled';\n    },\n    [fetchForecast.pending]: (state) => {\n      state.fetchState = 'pending';\n    }\n  }\n});\n\nconst { actions, reducer } = forecastSlice;\n\nexport const { forecastReset, setCityIdToSearch } = actions;\n\nexport default reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setLocalState } from '../helpers';\n\nimport ui from './ui';\nimport cities from './cities';\nimport forecast from './forecast';\n\nexport const store = configureStore({\n  reducer: { ui, cities, forecast }\n});\n\nstore.subscribe(() => {\n  setLocalState(store.getState().ui);\n});\n\nexport { fetchCities, citiesReset, setCityNameToSearch } from './cities';\nexport { fetchForecast, forecastReset, setCityIdToSearch } from './forecast';\nexport { toggleDarkMode, toggleCelcius, setInputValue, addPreviousCities, delPreviousCity } from './ui';\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField, IconButton } from '@material-ui/core';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { Clear as ClearIcon } from '@material-ui/icons';\nimport { setCityNameToSearch, setInputValue } from '../redux';\n\nfunction Input() {\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n  const inputValue = useSelector((state) => state.ui.inputValue);\n  const fetchState = useSelector((state) => state.cities.fetchState);\n\n  const [debouncedCallback] = useDebouncedCallback((value) => {\n    if (inputValue.length > 1) dispatch(setCityNameToSearch(value));\n  }, 1000);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    dispatch(setInputValue(value));\n    debouncedCallback(value);\n  };\n\n  const handleClear = () => {\n    dispatch(setInputValue(''));\n    inputRef.current.focus();\n  };\n\n  return (\n    <TextField\n      inputRef={inputRef}\n      label='Enter city name'\n      id='outlined-margin-normal'\n      variant='outlined'\n      fullWidth\n      onChange={handleChange}\n      value={inputValue}\n      disabled={fetchState === 'pending'}\n      autoComplete='off'\n      InputProps={{\n        endAdornment: inputValue && (\n          <IconButton edge='end' onClick={handleClear}>\n            <ClearIcon />\n          </IconButton>\n        )\n      }}\n    />\n  );\n}\n\nexport default Input;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Box } from '@material-ui/core';\nimport { getTime, k2c, k2f } from '../helpers';\n\nfunction WeatherData({ data }) {\n  const { temp, pressure, humidity, temp_min: minTemp, temp_max: maxTemp, sunrise, sunset } = data;\n  const prefersCelcius = useSelector((state) => state.ui.prefersCelcius);\n  const convertedTemp = prefersCelcius ? k2c(temp) : k2f(temp);\n  const convertedMinTemp = prefersCelcius ? k2c(minTemp) : k2f(minTemp);\n  const convertedMaxTemp = prefersCelcius ? k2c(maxTemp) : k2f(maxTemp);\n\n  return (\n    <Box display='flex' fontFamily='Monospace'>\n      <Box fontSize='24px'>{convertedTemp}&nbsp;</Box>\n      <Box flexGrow={1}>\n        <Box display='flex'>\n          <Box color='primary.light'>HI:&nbsp;</Box>\n          {convertedMaxTemp}\n        </Box>\n        <Box display='flex'>\n          <Box color='secondary.light'>LO:&nbsp;</Box>\n          {convertedMinTemp}\n        </Box>\n      </Box>\n      <Box flexGrow={1} display='flex' flexDirection='column'>\n        <Box display='flex' flexDirection='row'>\n          <Box fontWeight='fontWeightBold'>pressure:&nbsp;</Box>\n          <Box>{pressure}</Box>\n        </Box>\n        <Box display='flex' flexDirection='row'>\n          <Box fontWeight='fontWeightBold'>humidity:&nbsp;</Box>\n          <Box>{humidity}%</Box>\n        </Box>\n      </Box>\n      <Box flexGrow={1} display='flex' flexDirection='column'>\n        <Box display='flex' flexDirection='row'>\n          <Box fontWeight='fontWeightBold'>dawn:&nbsp;</Box>\n          <Box>{getTime(sunrise)}</Box>\n        </Box>\n        <Box display='flex' flexDirection='row'>\n          <Box fontWeight='fontWeightBold'>dusk:&nbsp;</Box>\n          <Box>{getTime(sunset)}</Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default WeatherData;\n","import React from 'react';\nimport { Card, CardHeader, CardContent, CardMedia, Avatar, makeStyles, Divider, colors } from '@material-ui/core';\nimport WeatherData from './WeatherData';\nimport { getLocalDateTime } from '../helpers';\n\nconst useStyles = makeStyles(() => ({\n  avatar: {\n    backgroundColor: colors.grey[400]\n  }\n}));\n\nfunction Forecast(props) {\n  const classes = useStyles();\n  const { forecast } = props;\n  const { main, name: cityName, weather, coord, sys, timezone: timeZone } = forecast;\n  const { sunrise, sunset, country } = sys;\n  const data = { ...main, sunrise, sunset };\n  const { main: weatherMain, description: weatherDesc, icon: weatherIcon } = weather[0];\n  const { lon, lat } = coord;\n\n  const googleMapStaticUrl = 'https://maps.googleapis.com/maps/api/staticmap';\n  const publicApiKey = 'AIzaSyATSrlXeexQILWJpBpOehRMdeVeRowLq70';\n  const mapUrl = `${googleMapStaticUrl}?center=${lat},${lon}&zoom=10&scale=1&size=520x300&maptype=hybrid&key=${publicApiKey}`;\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar\n            alt={weatherDesc}\n            src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\n            className={classes.avatar}\n          />\n        }\n        title={`Weather in ${cityName} (${country})`}\n        subheader={`${weatherMain} (${weatherDesc}) • Local Time: ${getLocalDateTime(timeZone)}`}\n      />\n      <Divider light variant='middle' />\n      <CardContent>\n        <WeatherData data={data} />\n      </CardContent>\n      <CardMedia component='img' src={mapUrl} />\n    </Card>\n  );\n}\n\nexport default Forecast;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert } from '@material-ui/lab';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport { fetchForecast } from '../redux';\nimport Forecast from './Forecast';\n\nfunction ForecastResults() {\n  const dispatch = useDispatch();\n\n  const response = useSelector((state) => state.forecast.response);\n  const cityIdToSearch = useSelector((state) => state.forecast.cityIdToSearch);\n  const fetchState = useSelector((state) => state.forecast.fetchState);\n  const cityNameToSearch = useSelector((state) => state.cities.cityNameToSearch);\n\n  useEffect(() => {\n    if (cityIdToSearch) {\n      dispatch(fetchForecast(cityIdToSearch));\n    }\n  }, [cityIdToSearch, dispatch]);\n\n  const renderComponent = () => {\n    if (fetchState !== 'idle' && !cityNameToSearch) {\n      if (fetchState === 'fulfilled') {\n        if (response.cod === 200) {\n          if (response.coord) {\n            return <Forecast forecast={response} />;\n          }\n          return <Alert severity='info'>No forecast found for City with id &quot;{cityIdToSearch}&quot;.</Alert>;\n        }\n        return <Alert severity='error'>{response.message}</Alert>;\n      }\n      if (fetchState === 'pending') {\n        return (\n          <Grid container justify='center'>\n            <CircularProgress />\n          </Grid>\n        );\n      }\n    }\n    return null;\n  };\n\n  return renderComponent();\n}\n\nexport default ForecastResults;\n","import React from 'react';\nimport { ListItemAvatar, Avatar, ListItem, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction City(props) {\n  const { city, onCityClick } = props;\n\n  const useStyles = makeStyles({\n    avatar: {\n      minWidth: '40px'\n    },\n    small: {\n      height: '24px',\n      width: '24px'\n    },\n    root: {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      maxWidth: '224px'\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <ListItem button onClick={() => onCityClick(city.id, city.name)}>\n      <ListItemAvatar classes={{ root: classes.avatar }}>\n        <Avatar\n          className={classes.small}\n          variant='rounded'\n          size='small'\n          alt={`country flag of ${city.name}`}\n          src={`https://www.countryflags.io/${city.country}/shiny/24.png`}\n        />\n      </ListItemAvatar>\n      <ListItemText disableTypography classes={{ root: classes.root }}>\n        {city.state && `${city.state} - `}\n        {city.name}\n      </ListItemText>\n    </ListItem>\n  );\n}\n\nexport default City;\n","import React from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport City from './City';\n\nfunction Row(props) {\n  const { index, style, data } = props;\n  const { cities, onCityClick } = data;\n  const cityItem = cities[index];\n  return (\n    <div style={style} key={index}>\n      <City city={cityItem} onCityClick={onCityClick} />\n    </div>\n  );\n}\n\nfunction CityList(props) {\n  const { cities, onCityClick } = props;\n\n  return (\n    <List className='List' height={300} itemCount={cities.length} itemSize={36} itemData={{ cities, onCityClick }}>\n      {Row}\n    </List>\n  );\n}\n\nexport default CityList;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert } from '@material-ui/lab';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport { citiesReset, fetchCities, setInputValue, addPreviousCities, setCityIdToSearch } from '../redux';\nimport CityList from './CityList';\n\nfunction InputResults() {\n  const dispatch = useDispatch();\n\n  const handleCityClick = (id, name) => {\n    dispatch(setInputValue(name));\n    dispatch(addPreviousCities({ id, name }));\n    dispatch(citiesReset());\n    dispatch(setCityIdToSearch(id));\n  };\n\n  const response = useSelector((state) => state.cities.response);\n  const cityNameToSearch = useSelector((state) => state.cities.cityNameToSearch);\n  const fetchState = useSelector((state) => state.cities.fetchState);\n\n  useEffect(() => {\n    if (cityNameToSearch) {\n      dispatch(fetchCities(cityNameToSearch));\n    }\n  }, [cityNameToSearch, dispatch]);\n\n  const renderComponent = () => {\n    if (fetchState !== 'idle') {\n      if (fetchState === 'fulfilled') {\n        if (!response.name) {\n          if (response.length) {\n            return <CityList cities={response} onCityClick={handleCityClick} />;\n          }\n          return <Alert severity='info'>No cities found using &quot;{cityNameToSearch}&quot;.</Alert>;\n        }\n        return <Alert severity='error'>{response.message}</Alert>;\n      }\n      if (fetchState === 'pending') {\n        return (\n          <Grid container justify='center'>\n            <CircularProgress />\n          </Grid>\n        );\n      }\n    }\n    return null;\n  };\n\n  return renderComponent();\n}\n\nexport default InputResults;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from '@material-ui/core';\nimport { toggleDarkMode } from '../redux';\n\nfunction DarkModeToggler() {\n  const dispatch = useDispatch();\n  const prefersDarkMode = useSelector((state) => state.ui.prefersDarkMode);\n\n  const handleClick = () => {\n    dispatch(toggleDarkMode());\n  };\n\n  return <Switch checked={prefersDarkMode} onChange={handleClick} color='default' />;\n}\n\nexport default DarkModeToggler;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from '@material-ui/core';\nimport { toggleCelcius } from '../redux';\n\nfunction CelciusToggler() {\n  const dispatch = useDispatch();\n  const prefersCelcius = useSelector((state) => state.ui.prefersCelcius);\n\n  const handleClick = () => {\n    dispatch(toggleCelcius());\n  };\n\n  return <Switch checked={prefersCelcius} onChange={handleClick} color='default' />;\n}\n\nexport default CelciusToggler;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  makeStyles,\n  Box,\n  IconButton,\n  Avatar,\n  ListItem,\n  Menu,\n  List,\n  Divider,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListSubheader,\n  Paper,\n  Toolbar\n} from '@material-ui/core';\n\nimport {\n  Menu as MenuIcon,\n  Brightness5 as SunIcon,\n  Brightness3 as MoonIcon,\n  Delete as DeleteIcon,\n  FiberManualRecord as DotIcon\n} from '@material-ui/icons';\n\nimport { delPreviousCity, setInputValue, setCityIdToSearch } from '../redux';\n\nimport DarkModeToggler from './DarkModeToggler';\nimport CelciusToggler from './CelciusToggler';\n\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  },\n  title: {\n    fontSize: '18px'\n  },\n  dot: {\n    margin: '4px',\n    fontSize: '8px'\n  },\n  list: {\n    minWidth: '288px'\n  },\n  root: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    maxWidth: '224px'\n  }\n}));\n\n/* white-space: 'nowrap',\noverflow: 'hidden',\ntext-overflow: 'ellipsis',\nfont-size: '0.9rem' */\n\nfunction MainMenu() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const previousCities = useSelector((state) => state.ui.previousCities);\n\n  const handleMenuClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleCityNameClick = (name, id) => {\n    dispatch(setInputValue(name));\n    dispatch(setCityIdToSearch(id));\n    handleClose();\n  };\n\n  const handleCityDelClick = (index) => {\n    dispatch(delPreviousCity(index));\n  };\n\n  return (\n    <Paper position='static' color='primary'>\n      <Toolbar disableGutters variant='dense'>\n        <IconButton aria-label='menu1' aria-controls='menu1' aria-haspopup='true' onClick={handleMenuClick}>\n          <MenuIcon />\n        </IconButton>\n        <Box fontStyle='italic' fontWeight='bold' className={classes.title} component='span'>\n          WEE\n        </Box>\n        <DotIcon className={classes.dot} color='secondary' />\n        <Box fontStyle='italic' fontWeight='bold' className={classes.title} component='span'>\n          WEATHER\n        </Box>\n        <DotIcon className={classes.dot} color='primary' />\n        <Box fontStyle='italic' fontWeight='bold' className={classes.title} component='span'>\n          APP\n        </Box>\n      </Toolbar>\n      <Menu id='menu1' anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\n        <List subheader={<ListSubheader>SETTINGS</ListSubheader>}>\n          <ListItem>\n            <ListItemText>Dark Mode</ListItemText>\n            <Avatar className={classes.small}>\n              <SunIcon />\n            </Avatar>\n            <DarkModeToggler />\n            <Avatar className={classes.small}>\n              <MoonIcon />\n            </Avatar>\n          </ListItem>\n          <ListItem>\n            <ListItemText>Temp. Unit</ListItemText>\n            <Avatar className={classes.small} size='small'>\n              <Box fontWeight='bold' fontSize='1.2em'>\n                F\n              </Box>\n            </Avatar>\n            <CelciusToggler />\n            <Avatar className={classes.small} size='small'>\n              <Box fontWeight='bold' fontSize='1.2em'>\n                C\n              </Box>\n            </Avatar>\n          </ListItem>\n        </List>\n        {previousCities.length > 0 && <Divider /> && (\n          <List dense subheader={<ListSubheader>PREVIOUS CITIES</ListSubheader>}>\n            {previousCities.map((prevCity, index) => (\n              <ListItem button key={prevCity.id} onClick={() => handleCityNameClick(prevCity.name, prevCity.id)}>\n                <ListItemText disableTypography classes={{ root: classes.root }}>\n                  {prevCity.name}\n                </ListItemText>\n                <ListItemSecondaryAction>\n                  <IconButton edge='end' aria-label='delete' onClick={() => handleCityDelClick(index)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </Menu>\n    </Paper>\n  );\n}\n\nexport default MainMenu;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Container, Grid, Box } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'typeface-roboto';\n\nimport Input from './Input';\nimport ForecastResults from './ForecastResults';\nimport InputResults from './InputResults';\nimport MainMenu from './MainMenu';\n\nfunction App() {\n  const prefersDarkMode = useSelector((state) => state.ui.prefersDarkMode);\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light'\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline>\n        <Container maxWidth='sm' disableGutters>\n          <Box m={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <MainMenu />\n              </Grid>\n              <Grid item xs={12}>\n                <Input />\n              </Grid>\n              <Grid item xs={12}>\n                <InputResults />\n                <ForecastResults />\n              </Grid>\n            </Grid>\n          </Box>\n        </Container>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}