{"version":3,"sources":["helpers/format.js","helpers/tempConverter.js","redux/ui.js","helpers/localState.js","API/cities.js","redux/cities.js","API/forecast.js","redux/forecast.js","redux/index.js","components/Input.js","components/WeatherData.js","components/Forecast.js","components/ForecastResults.js","components/City.js","components/CityList.js","components/InputResults.js","components/DarkModeToggler.js","components/CelciusToggler.js","components/MainMenu.js","components/App.js","index.js"],"names":["dateOptions","year","month","day","hour","minute","timeZoneName","hour12","timeOptions","getLocalDateTime","timeZone","lclNow","Date","utcNow","getTime","getTimezoneOffset","newNow","Intl","DateTimeFormat","undefined","format","dateTime","k2c","k","Math","round","k2f","initialState","prefersDarkMode","prefersCelcius","previousCities","serializedState","localStorage","getItem","JSON","parse","err","getLocalState","inputValue","uiSlice","createSlice","name","reducers","toggleDarkMode","state","toggleCelcius","setInputValue","action","payload","addPreviousCities","newCity","findIndex","prevCity","id","unshift","length","pop","delPreviousCity","cityIndexToDelete","splice","actions","reducer","axios","create","baseURL","fetchState","response","cityNameToSearch","fetchCities","createAsyncThunk","q","API","get","params","then","res","data","catch","citiesSlice","citiesReset","setCityNameToSearch","extraReducers","fulfilled","pending","cityIdToSearch","fetchForecast","forecastSlice","forecastReset","setCityIdToSearch","store","configureStore","ui","cities","forecast","subscribe","stringify","setItem","Error","setLocalState","getState","Input","dispatch","useDispatch","inputRef","useRef","useSelector","useDebouncedCallback","value","debouncedCallback","TextField","label","variant","fullWidth","onChange","e","target","disabled","autoComplete","InputProps","endAdornment","IconButton","edge","onClick","current","focus","Clear","WeatherData","temp","pressure","humidity","minTemp","temp_min","maxTemp","temp_max","sunrise","sunset","convertedTemp","convertedMinTemp","convertedMaxTemp","Grid","container","Typography","component","Box","flexGrow","display","item","flexDirection","fontWeight","useStyles","makeStyles","theme","cardHeaderContent","minWidth","cardHeaderTitle","whiteSpace","overflow","textOverflow","avatar","backgroundColor","colors","grey","width","spacing","height","title","Forecast","props","classes","main","cityName","weather","coord","sys","timezone","extraData","country","flag","region","subregion","weatherMain","weatherDesc","description","Weather","icon","lon","lat","useState","showMap","setShowMap","showFlag","setShowFlag","showWeather","setShowWeather","mapUrl","Fade","in","Card","xs","sm","CardHeader","content","Avatar","alt","src","root","onLoad","subheader","Divider","light","CardContent","Collapse","timeout","CardMedia","ForecastResults","useEffect","cod","Alert","severity","message","Grow","justify","CircularProgress","renderComponent","City","city","onCityClick","small","maxWidth","ListItem","button","ListItemAvatar","className","size","ListItemText","disableTypography","Row","index","style","cityItem","key","CityList","itemCount","itemSize","itemData","InputResults","handleCityClick","DarkModeToggler","Switch","checked","color","CelciusToggler","dot","margin","fontSize","list","MainMenu","React","anchorEl","setAnchorEl","open","Boolean","handleClose","Paper","position","Toolbar","disableGutters","aria-label","aria-controls","aria-haspopup","currentTarget","fontStyle","Menu","keepMounted","onClose","List","ListSubheader","dense","map","ListItemSecondaryAction","handleCityDelClick","Delete","App","useMemo","createMuiTheme","palette","type","ThemeProvider","CssBaseline","Container","m","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8e4b537.chunk.js","sourcesContent":["const dateOptions = {\n  year: 'numeric',\n  month: 'short',\n  day: '2-digit',\n  hour: '2-digit',\n  minute: '2-digit',\n  timeZoneName: 'short',\n  hour12: false\n};\n\nconst timeOptions = { hour: 'numeric', minute: '2-digit', hour12: false };\n\nexport const getLocalDateTime = (timeZone) => {\n  const lclNow = new Date();\n  const utcNow = lclNow.getTime() + lclNow.getTimezoneOffset() * 60000;\n  const newNow = new Date(utcNow + timeZone * 1000);\n  return new Intl.DateTimeFormat(undefined, dateOptions).format(newNow);\n};\n\nexport const getTime = (dateTime) => new Intl.DateTimeFormat(undefined, timeOptions).format(dateTime * 1000);\n","export const k2c = (k) => `${Math.round(k - 273.15)}°C`;\nexport const k2f = (k) => `${Math.round(((k - 273.15) * 9) / 5 + 32)}°F`;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { getLocalState } from '../helpers';\n\nconst initialState = {\n  prefersDarkMode: false,\n  prefersCelcius: true,\n  previousCities: [],\n  ...getLocalState(),\n  inputValue: ''\n};\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleDarkMode: (state) => {\n      state.prefersDarkMode = !state.prefersDarkMode;\n    },\n    toggleCelcius: (state) => {\n      state.prefersCelcius = !state.prefersCelcius;\n    },\n    setInputValue: (state, action) => {\n      state.inputValue = action.payload;\n    },\n    addPreviousCities: (state, action) => {\n      const newCity = action.payload;\n      const cityAlreadyExists = state.previousCities.findIndex((prevCity) => prevCity.id === newCity.id) !== -1;\n      if (!cityAlreadyExists) {\n        state.previousCities.unshift(action.payload);\n        if (state.previousCities.length > 5) state.previousCities.pop();\n      }\n    },\n    delPreviousCity: (state, action) => {\n      const cityIndexToDelete = action.payload;\n      state.previousCities.splice(cityIndexToDelete, 1);\n    }\n  }\n});\n\nconst { actions, reducer } = uiSlice;\n\nexport const { toggleDarkMode, toggleCelcius, setInputValue, addPreviousCities, delPreviousCity } = actions;\n\nexport default reducer;\n","export const getLocalState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (!serializedState) return undefined;\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const setLocalState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    throw new Error(\"can't access localStorage\");\n  }\n};\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: `/cities`,\n});\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport API from '../API/cities';\n\nconst initialState = {\n  fetchState: null,\n  response: null,\n  cityNameToSearch: null\n};\n\nexport const fetchCities = createAsyncThunk('cities/fetchCities', (q) =>\n  API.get('/', { params: { q } })\n    .then((res) => res.data)\n    .catch((err) => err)\n);\n\nconst citiesSlice = createSlice({\n  name: 'cities',\n  initialState,\n  reducers: {\n    citiesReset: () => initialState,\n    setCityNameToSearch: (state, action) => {\n      state.cityNameToSearch = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchCities.fulfilled]: (state, action) => {\n      state.response = action.payload;\n      state.fetchState = 'fulfilled';\n    },\n    [fetchCities.pending]: (state) => {\n      state.fetchState = 'pending';\n    }\n  }\n});\n\nconst { actions, reducer } = citiesSlice;\n\nexport const { citiesReset, setCityNameToSearch } = actions;\n\nexport default reducer;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: `/forecast`,\n});\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport API from '../API/forecast';\n\nconst initialState = {\n  fetchState: null,\n  response: null,\n  cityIdToSearch: 3433955\n};\n\nexport const fetchForecast = createAsyncThunk('forecast/fetchForecast', (id) =>\n  API.get('/', { params: { id } })\n    .then((res) => res.data)\n    .catch((err) => err)\n);\n\nconst forecastSlice = createSlice({\n  name: 'forecast',\n  initialState,\n  reducers: {\n    forecastReset: () => initialState,\n    setCityIdToSearch: (state, action) => {\n      state.cityIdToSearch = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchForecast.fulfilled]: (state, action) => {\n      state.response = action.payload;\n      state.fetchState = 'fulfilled';\n    },\n    [fetchForecast.pending]: (state) => {\n      state.fetchState = 'pending';\n    }\n  }\n});\n\nconst { actions, reducer } = forecastSlice;\n\nexport const { forecastReset, setCityIdToSearch } = actions;\n\nexport default reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setLocalState } from '../helpers';\n\nimport ui from './ui';\nimport cities from './cities';\nimport forecast from './forecast';\n\nexport const store = configureStore({\n  reducer: { ui, cities, forecast }\n});\n\nstore.subscribe(() => {\n  setLocalState(store.getState().ui);\n});\n\nexport { fetchCities, citiesReset, setCityNameToSearch } from './cities';\nexport { fetchForecast, forecastReset, setCityIdToSearch } from './forecast';\nexport { toggleDarkMode, toggleCelcius, setInputValue, addPreviousCities, delPreviousCity } from './ui';\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField, IconButton } from '@material-ui/core';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { Clear as ClearIcon } from '@material-ui/icons';\nimport { setCityNameToSearch, setInputValue } from '../redux';\n\nfunction Input() {\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n  const inputValue = useSelector((state) => state.ui.inputValue);\n  const fetchState = useSelector((state) => state.cities.fetchState);\n\n  const [debouncedCallback] = useDebouncedCallback((value) => {\n    if (inputValue.length > 1) dispatch(setCityNameToSearch(value));\n  }, 1000);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    dispatch(setInputValue(value));\n    debouncedCallback(value);\n  };\n\n  const handleClear = () => {\n    dispatch(setInputValue(''));\n    inputRef.current.focus();\n  };\n\n  return (\n    <TextField\n      inputRef={inputRef}\n      label='Enter city name'\n      id='outlined-margin-normal'\n      variant='outlined'\n      fullWidth\n      onChange={handleChange}\n      value={inputValue}\n      disabled={fetchState === 'pending'}\n      autoComplete='off'\n      InputProps={{\n        endAdornment: inputValue && (\n          <IconButton edge='end' onClick={handleClear}>\n            <ClearIcon />\n          </IconButton>\n        )\n      }}\n    />\n  );\n}\n\nexport default Input;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Box, Grid, Typography } from '@material-ui/core';\nimport { getTime, k2c, k2f } from '../helpers';\n\nfunction WeatherData({ data }) {\n  const { temp, pressure, humidity, temp_min: minTemp, temp_max: maxTemp, sunrise, sunset } = data;\n  const prefersCelcius = useSelector((state) => state.ui.prefersCelcius);\n  const convertedTemp = prefersCelcius ? k2c(temp) : k2f(temp);\n  const convertedMinTemp = prefersCelcius ? k2c(minTemp) : k2f(minTemp);\n  const convertedMaxTemp = prefersCelcius ? k2c(maxTemp) : k2f(maxTemp);\n\n  return (\n    <Grid container>\n      <Typography component='span'>{convertedTemp}&nbsp;</Typography>\n      <Box flexGrow={1}>\n        <Box display='flex'>\n          <Typography component='span'>Max:&nbsp;</Typography>\n          <Typography component='span'> {convertedMaxTemp}</Typography>\n        </Box>\n        <Grid item>\n          <Typography component='span'>Min:&nbsp;</Typography>\n          <Typography component='span'> {convertedMinTemp}</Typography>\n        </Grid>\n      </Box>\n      <Box flexGrow={1} display='flex' flexDirection='column'>\n        <Box display='flex' flexDirection='row'>\n          <Box fontWeight='fontWeightBold'>pressure:&nbsp;</Box>\n          <Box>{pressure}</Box>\n        </Box>\n        <Box display='flex' flexDirection='row'>\n          <Box fontWeight='fontWeightBold'>humidity:&nbsp;</Box>\n          <Box>{humidity}%</Box>\n        </Box>\n      </Box>\n      <Box flexGrow={1} display='flex' flexDirection='column'>\n        <Box display='flex' flexDirection='row'>\n          <Box fontWeight='fontWeightBold'>dawn:&nbsp;</Box>\n          <Box>{getTime(sunrise)}</Box>\n        </Box>\n        <Box display='flex' flexDirection='row'>\n          <Box fontWeight='fontWeightBold'>dusk:&nbsp;</Box>\n          <Box>{getTime(sunset)}</Box>\n        </Box>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default WeatherData;\n","import React, { useState } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardMedia,\n  Avatar,\n  makeStyles,\n  Divider,\n  Grid,\n  colors,\n  Fade,\n  Collapse\n} from '@material-ui/core';\nimport WeatherData from './WeatherData';\nimport { getLocalDateTime } from '../helpers';\n\nconst useStyles = makeStyles((theme) => ({\n  cardHeaderContent: {\n    minWidth: '0'\n  },\n  cardHeaderTitle: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    minWidth: '0'\n  },\n  avatar: {\n    backgroundColor: colors.grey[400],\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  },\n  title: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  }\n}));\n\nfunction Forecast(props) {\n  const classes = useStyles();\n  const { forecast } = props;\n  const { main, name: cityName, weather, coord, sys, timezone: timeZone, extraData } = forecast;\n  const { name: country, flag, region, subregion } = extraData;\n  const { sunrise, sunset } = sys;\n  const data = { ...main, sunrise, sunset, flag, region, subregion };\n  const { main: weatherMain, description: weatherDesc, icon: Weather } = weather[0];\n  const { lon, lat } = coord;\n\n  const [showMap, setShowMap] = useState(false);\n  const handleShowMap = () => {\n    setShowMap(true);\n  };\n\n  const [showFlag, setShowFlag] = useState(false);\n  const handleShowFlag = () => {\n    setShowFlag(true);\n  };\n\n  const [showWeather, setShowWeather] = useState(false);\n  const handleShowWeather = () => {\n    setShowWeather(true);\n  };\n\n  const googleMapStaticUrl = 'https://maps.googleapis.com/maps/api/staticmap';\n  const publicApiKey = 'AIzaSyATSrlXeexQILWJpBpOehRMdeVeRowLq70';\n  const mapUrl = `${googleMapStaticUrl}?center=${lat},${lon}&zoom=10&scale=1&size=568x568&maptype=hybrid&key=${publicApiKey}`;\n\n  return (\n    <Fade in>\n      <Card>\n        <Grid container spacing={0}>\n          <Grid item xs={12} sm={6}>\n            <CardHeader\n              classes={{ content: classes.cardHeaderContent, title: classes.cardHeaderTitle }}\n              avatar={\n                <Fade in={showFlag}>\n                  <Avatar\n                    alt={`country flag of ${cityName}`}\n                    src={flag}\n                    classes={{ root: classes.avatar }}\n                    onLoad={handleShowFlag}\n                  />\n                </Fade>\n              }\n              title={`Weather in ${cityName}`}\n              subheader={`${country}`}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <CardHeader\n              avatar={\n                <Fade in={showWeather}>\n                  <Avatar\n                    alt={weatherDesc}\n                    src={`http://openweathermap.org/img/wn/${Weather}@2x.png`}\n                    classes={{ root: classes.avatar }}\n                    onLoad={handleShowWeather}\n                  />\n                </Fade>\n              }\n              title={`${weatherMain} (${weatherDesc})`}\n              subheader={`${getLocalDateTime(timeZone)}`}\n            />\n          </Grid>\n        </Grid>\n\n        <Divider light variant='middle' />\n        <CardContent>\n          <WeatherData data={data} />\n        </CardContent>\n        <Collapse in={showMap} timeout='auto'>\n          <CardMedia component='img' src={mapUrl} onLoad={handleShowMap} />\n        </Collapse>\n      </Card>\n    </Fade>\n  );\n}\n\nexport default Forecast;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert } from '@material-ui/lab';\nimport { CircularProgress, Grid, Grow, Fade } from '@material-ui/core';\nimport { fetchForecast } from '../redux';\nimport Forecast from './Forecast';\n\nfunction ForecastResults() {\n  const dispatch = useDispatch();\n\n  const response = useSelector((state) => state.forecast.response);\n  const cityIdToSearch = useSelector((state) => state.forecast.cityIdToSearch);\n  const fetchState = useSelector((state) => state.forecast.fetchState);\n  const cityNameToSearch = useSelector((state) => state.cities.cityNameToSearch);\n\n  useEffect(() => {\n    if (cityIdToSearch) {\n      dispatch(fetchForecast(cityIdToSearch));\n    }\n  }, [cityIdToSearch, dispatch]);\n\n  const renderComponent = () => {\n    if (fetchState !== 'idle' && !cityNameToSearch) {\n      if (fetchState === 'fulfilled') {\n        if (response.cod === 200) {\n          if (response.coord) {\n            return <Forecast forecast={response} />;\n          }\n          return (\n            <Fade in>\n              <Alert severity='info'>No forecast found for City with id &quot;{cityIdToSearch}&quot;.</Alert>\n            </Fade>\n          );\n        }\n        return (\n          <Fade in>\n            <Alert severity='error'>{response.message}</Alert>\n          </Fade>\n        );\n      }\n      if (fetchState === 'pending') {\n        return (\n          <Grow in>\n            <Grid container justify='center'>\n              <CircularProgress />\n            </Grid>\n          </Grow>\n        );\n      }\n    }\n    return null;\n  };\n\n  return renderComponent();\n}\n\nexport default ForecastResults;\n","import React, { useState } from 'react';\nimport { ListItemAvatar, Avatar, ListItem, ListItemText, Fade } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction City(props) {\n  const { city, onCityClick } = props;\n  const [showFlag, setShowFlag] = useState(false);\n\n  const useStyles = makeStyles({\n    avatar: {\n      minWidth: '40px'\n    },\n    small: {\n      height: '24px',\n      width: '24px'\n    },\n    root: {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      maxWidth: '224px'\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <Fade in>\n      <ListItem button onClick={() => onCityClick(city.id, city.name)}>\n        <ListItemAvatar classes={{ root: classes.avatar }}>\n          <Fade in={showFlag}>\n            <Avatar\n              className={classes.small}\n              variant='rounded'\n              size='small'\n              alt={`country flag of ${city.name}`}\n              src={`https://www.countryflags.io/${city.country}/shiny/24.png`}\n              onLoad={() => setShowFlag(true)}\n            />\n          </Fade>\n        </ListItemAvatar>\n        <ListItemText disableTypography classes={{ root: classes.root }}>\n          {city.state && `${city.state} - `}\n          {city.name}\n        </ListItemText>\n      </ListItem>\n    </Fade>\n  );\n}\n\nexport default City;\n","import React from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport City from './City';\n\nfunction Row(props) {\n  const { index, style, data } = props;\n  const { cities, onCityClick } = data;\n  const cityItem = cities[index];\n  return (\n    <div style={style} key={index}>\n      <City city={cityItem} onCityClick={onCityClick} />\n    </div>\n  );\n}\n\nfunction CityList(props) {\n  const { cities, onCityClick } = props;\n\n  return (\n    <List className='List' height={300} itemCount={cities.length} itemSize={36} itemData={{ cities, onCityClick }}>\n      {Row}\n    </List>\n  );\n}\n\nexport default CityList;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert } from '@material-ui/lab';\nimport { CircularProgress, Grid, Grow, Fade } from '@material-ui/core';\nimport { citiesReset, fetchCities, setInputValue, addPreviousCities, setCityIdToSearch } from '../redux';\nimport CityList from './CityList';\n\nfunction InputResults() {\n  const dispatch = useDispatch();\n\n  const handleCityClick = (id, name) => {\n    dispatch(setInputValue(name));\n    dispatch(addPreviousCities({ id, name }));\n    dispatch(citiesReset());\n    dispatch(setCityIdToSearch(id));\n  };\n\n  const response = useSelector((state) => state.cities.response);\n  const cityNameToSearch = useSelector((state) => state.cities.cityNameToSearch);\n  const fetchState = useSelector((state) => state.cities.fetchState);\n\n  useEffect(() => {\n    if (cityNameToSearch) {\n      dispatch(fetchCities(cityNameToSearch));\n    }\n  }, [cityNameToSearch, dispatch]);\n\n  const renderComponent = () => {\n    if (fetchState !== 'idle') {\n      if (fetchState === 'fulfilled') {\n        if (!response.name) {\n          if (response.length) {\n            return <CityList cities={response} onCityClick={handleCityClick} />;\n          }\n          return (\n            <Fade in>\n              <Alert severity='info'>No cities found using &quot;{cityNameToSearch}&quot;.</Alert>\n            </Fade>\n          );\n        }\n        return (\n          <Fade in>\n            <Alert severity='error'>{response.message}</Alert>\n          </Fade>\n        );\n      }\n      if (fetchState === 'pending') {\n        return (\n          <Grow in>\n            <Grid container justify='center'>\n              <CircularProgress />\n            </Grid>\n          </Grow>\n        );\n      }\n    }\n    return null;\n  };\n\n  return renderComponent();\n}\n\nexport default InputResults;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from '@material-ui/core';\nimport { toggleDarkMode } from '../redux';\n\nfunction DarkModeToggler() {\n  const dispatch = useDispatch();\n  const prefersDarkMode = useSelector((state) => state.ui.prefersDarkMode);\n\n  const handleClick = () => {\n    dispatch(toggleDarkMode());\n  };\n\n  return <Switch checked={prefersDarkMode} onChange={handleClick} color='default' />;\n}\n\nexport default DarkModeToggler;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from '@material-ui/core';\nimport { toggleCelcius } from '../redux';\n\nfunction CelciusToggler() {\n  const dispatch = useDispatch();\n  const prefersCelcius = useSelector((state) => state.ui.prefersCelcius);\n\n  const handleClick = () => {\n    dispatch(toggleCelcius());\n  };\n\n  return <Switch checked={prefersCelcius} onChange={handleClick} color='default' />;\n}\n\nexport default CelciusToggler;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  makeStyles,\n  Box,\n  IconButton,\n  Avatar,\n  ListItem,\n  Menu,\n  List,\n  Divider,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListSubheader,\n  Paper,\n  Toolbar\n} from '@material-ui/core';\n\nimport {\n  Menu as MenuIcon,\n  Brightness5 as SunIcon,\n  Brightness3 as MoonIcon,\n  Delete as DeleteIcon,\n  FiberManualRecord as DotIcon\n} from '@material-ui/icons';\n\nimport { delPreviousCity, setInputValue, setCityIdToSearch } from '../redux';\n\nimport DarkModeToggler from './DarkModeToggler';\nimport CelciusToggler from './CelciusToggler';\n\nconst useStyles = makeStyles((theme) => ({\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  },\n  dot: {\n    margin: '4px',\n    fontSize: '8px'\n  },\n  list: {\n    minWidth: '288px'\n  },\n  root: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    maxWidth: '224px'\n  }\n}));\n\nfunction MainMenu() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const previousCities = useSelector((state) => state.ui.previousCities);\n\n  const handleMenuClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleCityNameClick = (name, id) => {\n    dispatch(setInputValue(name));\n    dispatch(setCityIdToSearch(id));\n    handleClose();\n  };\n\n  const handleCityDelClick = (index) => {\n    dispatch(delPreviousCity(index));\n  };\n\n  return (\n    <Paper position='static' color='primary'>\n      <Toolbar disableGutters variant='dense'>\n        <IconButton aria-label='menu1' aria-controls='menu1' aria-haspopup='true' onClick={handleMenuClick}>\n          <MenuIcon />\n        </IconButton>\n\n        <DotIcon className={classes.dot} color='secondary' />\n        <Box fontWeight='bold' fontStyle='italic' fontSize='18px' component='span'>\n          WEATHER\n        </Box>\n        <DotIcon className={classes.dot} color='disabled' />\n        <Box fontWeight='bold' fontStyle='italic' fontSize='18px' component='span'>\n          APP\n        </Box>\n        <DotIcon className={classes.dot} color='primary' />\n      </Toolbar>\n      <Menu id='menu1' anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\n        <List className={classes.list} subheader={<ListSubheader>SETTINGS</ListSubheader>}>\n          <ListItem>\n            <ListItemText>Dark Mode</ListItemText>\n            <Avatar className={classes.small}>\n              <SunIcon />\n            </Avatar>\n            <DarkModeToggler />\n            <Avatar className={classes.small}>\n              <MoonIcon />\n            </Avatar>\n          </ListItem>\n          <ListItem>\n            <ListItemText>Temp. Unit</ListItemText>\n            <Avatar className={classes.small} size='small'>\n              <Box fontWeight='bold' fontSize='1.2em'>\n                F\n              </Box>\n            </Avatar>\n            <CelciusToggler />\n            <Avatar className={classes.small} size='small'>\n              <Box fontWeight='bold' fontSize='1.2em'>\n                C\n              </Box>\n            </Avatar>\n          </ListItem>\n        </List>\n        {previousCities.length > 0 && <Divider /> && (\n          <List dense subheader={<ListSubheader>PREVIOUS CITIES</ListSubheader>}>\n            {previousCities.map((prevCity, index) => (\n              <ListItem button key={prevCity.id} onClick={() => handleCityNameClick(prevCity.name, prevCity.id)}>\n                <ListItemText disableTypography classes={{ root: classes.root }}>\n                  {prevCity.name}\n                </ListItemText>\n                <ListItemSecondaryAction>\n                  <IconButton edge='end' aria-label='delete' onClick={() => handleCityDelClick(index)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </Menu>\n    </Paper>\n  );\n}\n\nexport default MainMenu;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Container, Grid, Box, createMuiTheme, ThemeProvider, CssBaseline, Fade } from '@material-ui/core';\nimport 'typeface-roboto';\n\nimport Input from './Input';\nimport ForecastResults from './ForecastResults';\nimport InputResults from './InputResults';\nimport MainMenu from './MainMenu';\n\nfunction App() {\n  const prefersDarkMode = useSelector((state) => state.ui.prefersDarkMode);\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light'\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline>\n        <Fade in>\n          <Container maxWidth='sm' disableGutters>\n            <Box m={2}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <MainMenu />\n                </Grid>\n                <Grid item xs={12}>\n                  <Input />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputResults />\n                  <ForecastResults />\n                </Grid>\n              </Grid>\n            </Box>\n          </Container>\n        </Fade>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}